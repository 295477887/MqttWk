# 开发环境配置
nutz.application.name=mqttwk
# 定义starter之外的参数打印类包
nutz.propdoc.packages=cn.wizzer.iot.mqtt.server.broker
# broker唯一标识
mqttwk.broker.id=mqttwk
# IP地址
mqttwk.broker.host=127.0.0.1
# 端口
mqttwk.broker.port=8885
# 启用ssl验证(含websocket)
mqttwk.broker.ssl-enabled=true
# SSL密钥文件密码
mqttwk.broker.ssl-password=123456
# websocket 端口
mqttwk.broker.websocket-port=9995
# websocket 路径
mqttwk.broker.websocket-path=/mqtt
# 心跳时间(秒)
mqttwk.broker.keep-alive=60
# 消息缓存时间(秒)
mqttwk.broker.cache-timeout=500


#kafka地址 127.0.0.1:9092,127.0.0.1:9093
mqttwk.broker.kafka.bootstrap.servers=127.0.0.1:9092
#acks回令 如果必须等待回令,那么设置acks为all,否则，设置为-1,等待回令会有性能损耗
mqttwk.broker.kafka.acks=-1
#重试次数
mqttwk.broker.kafka.retries=0
#批量提交大小
mqttwk.broker.kafka.batch.size=16384
#提交延迟等待时间（等待时间内可以追加提交）
mqttwk.broker.kafka.linger.ms=1
#缓存大小
mqttwk.broker.kafka.buffer.memory=33554432
#序列化方法
mqttwk.broker.kafka.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mqttwk.broker.kafka.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#选择策略，可选配置
mqttwk.broker.kafka.partitioner.class=cn.wizzer.iot.mqtt.server.store.kafka.SimplePartitioner

#消费者配置项
mqttwk.broker.kafka.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mqttwk.broker.kafka.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#主题配置
mqttwk.broker.kafka.producer.topic=mqtt_publish
mqttwk.broker.kafka.consumer.topic=mqtt_subscribe


redis.host=127.0.0.1
redis.port=6379
redis.timeout=2000
redis.max_redir=10
redis.database=0
redis.maxTotal=100
#redis.password=test123
#redis集群模式设置 redis.mode=cluster
redis.mode=normal
#redis.nodes=